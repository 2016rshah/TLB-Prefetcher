ChampSim Workflow
-----------------

Building Your TLB Prefetcher Policy
--------------------------------
To build a policy, use the following command,

$./build.sh my_policy num_cores

where my_policy is a tlb_prefetcher policy (prefetcher/my_policy.tlb_pref).

For correlation based policies (ie Delta and GAC), you can use the following command,

$bash build_correlation.sh my_policy num_cores S stream_index

where S is the number of slots per TLB prefetcher entry and stream index is the distance into a stream that the prefetcher should predict.

Running Your TLB Prefetcher Policy
-------------------------------
run.sh will simulate a small amount of instructions locally, and should only be used for testing
purposes, not for the results you report. Output files will be produced in output/. Make sure that the targeted traces exist on your machine in the traces/ folder.

$./run.sh my_policy

run_cluster.sh will run SPEC benchmarks on a cluster. Make sure you're logged into that cluster before running this command. 
$./run_cluster.sh my_policy 

scripts/run_gap.sh will run GAP benchmarks on a cluster for gap 15, 17, 20, and 22.
$ cd scripts
$ ./run_gap.sh my_policy

scripts/run_cloudsuite.sh will run cloudsuite benchmarks on a cluster
$ cd scripts
$ ./run_cloudsuite.sh my_policy

Using the Cluster
-----------------
To check your jobs use the following command,

$/lusr/opt/condor/bin/condor_q

To remove jobs use the following command,

$/lusr/opt/condor/bin/condor_rm utcsid
or
$/lusr/opt/condor/bin/condor_rm job_number

Printing Results
----------------
To print out gap results,

$ cd scripts
$ ./print_gap_results.py 

enter the target prefetcher policy when prompted

To print out cloudsuite results,

$ cd scripts
$ ./print_cloudsuite_results.py 

enter the target prefetcher policy when prompted

Ideal TLB
---------
To model the absolute upper bound for a TLB prefetcher,
change the PAGE_TABLE_LATENCY to 0 in src/main.cc 
